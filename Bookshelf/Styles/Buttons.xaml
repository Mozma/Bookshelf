<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:s="clr-namespace:System;assembly=System.Runtime">


    <ResourceDictionary.MergedDictionaries>
        <!-- Order is important -->
        <ResourceDictionary Source="Colors.xaml" />
        <ResourceDictionary Source="Fonts.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <!-- Default icon button style-->
   <Style TargetType="{x:Type Button}" x:Key="TransparentButton">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Padding="{TemplateBinding Padding}" Background="{TemplateBinding Background}">
                        <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>

    <!-- Transparent button with text -->
    <Style TargetType="{x:Type Button}" x:Key="TransparentTextButton" BasedOn="{StaticResource TransparentButton}">
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="Foreground" Value="{StaticResource ForegroundGrayBrush}"/>
    </Style>

    <!-- Window control button base -->
    <Style TargetType="{x:Type Button}" x:Key="WindowControlButton" BasedOn="{StaticResource TransparentButton}">
        <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True"/>
        <Setter Property="Padding" Value="6"/>
        <Setter Property="Width" Value="45"/>
        <Setter Property="Height" Value="21"/>
    </Style>

    <!-- Minimize Button -->
    <Style TargetType="{x:Type Button}" x:Key="WindowMinimizeButton" BasedOn="{StaticResource WindowControlButton}">
        <Setter Property="Content">
            <Setter.Value>
                <Image Source="/Resources/Images/Topbar/Minimize.png" />
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Content">
                    <Setter.Value>
                        <Image Source="/Resources/Images/Topbar/MinimizeOver.png" />
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>
    
    <!-- Maximize Button -->
    <Style TargetType="{x:Type Button}" x:Key="WindowMaximizeButton" BasedOn="{StaticResource WindowControlButton}">
        <Setter Property="Content">
            <Setter.Value>
                <Image Source="/Resources/Images/Topbar/Maximize.png" />
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Content">
                    <Setter.Value>
                        <Image Source="/Resources/Images/Topbar/MaximizeOver.png" />
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- Close Button -->
    <Style TargetType="{x:Type Button}" x:Key="WindowCloseButton" BasedOn="{StaticResource WindowControlButton}">
        <Setter Property="Content">
            <Setter.Value>
                <Image Source="/Resources/Images/Topbar/Close.png" />
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Content">
                    <Setter.Value>
                        <Image Source="/Resources/Images/Topbar/CloseOver.png" />
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>
    <!-- Side bar buttons -->
    <Style TargetType="{x:Type Button}" x:Key="SidebarButton" BasedOn="{StaticResource TransparentButton}">
        <Style.Resources>
            <s:Uri x:Key="path">/Resources/Images/Sidebar/Home.png</s:Uri>
            <s:String x:Key="buttonName" >Home</s:String>
        </Style.Resources>

        <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True"/>
        <Setter Property="Width" Value="115"/>
        <Setter Property="Height" Value="39"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Foreground" Value="{StaticResource ForegroundDarkGrayBrush}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid x:Name="grid" Background="{StaticResource BackgroundLightGrayBrush}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="7"/>
                            <ColumnDefinition Width="39"/>
                            <ColumnDefinition Width="1*"/>
                        </Grid.ColumnDefinitions>

                        <Border x:Name="line" Grid.Column="0" Background="{StaticResource BackgroundLightGrayBrush}"
                        CornerRadius="0,3,3,0"/>

                        <Border Grid.Column="1" Padding="7">
                            <Border Background="{StaticResource BackgroundLightGrayBrush}">
                                <Image>
                                    <Image.Source>
                                        <BitmapImage UriSource="{DynamicResource path}"/>
                                    </Image.Source>
                                </Image>
                            </Border>
                        </Border>

                        <TextBlock Grid.Column="2" Text="{DynamicResource buttonName}" FontSize="14"
                           HorizontalAlignment="Left" VerticalAlignment="Center"
                           Foreground="{StaticResource ForegroundDarkGrayBrush}"/>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <EventTrigger RoutedEvent="MouseEnter">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation To="{StaticResource BackgroundDarkGray}" Duration="0:0:0.2" Storyboard.TargetName="line" Storyboard.TargetProperty="Background.Color" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="MouseLeave">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation To="{StaticResource BackgroundLightGray}" Duration="0:0:0.2" Storyboard.TargetName="line" Storyboard.TargetProperty="Background.Color" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        
                    </ControlTemplate.Triggers>
                    
                </ControlTemplate>
            </Setter.Value>
        </Setter>

     
    </Style>


    <Style TargetType="{x:Type Button}" x:Key="SidebarHomeButton" BasedOn="{StaticResource SidebarButton}">
        <Style.Resources>
            <s:Uri x:Key="path">/Resources/Images/Sidebar/Home.png</s:Uri>
            <s:String x:Key="buttonName" >Home</s:String>
        </Style.Resources>
    </Style>

    <Style TargetType="{x:Type Button}" x:Key="SidebarNoteButton" BasedOn="{StaticResource SidebarButton}">
        <Style.Resources>
            <s:Uri x:Key="path">/Resources/Images/Sidebar/Note.png</s:Uri>
            <s:String x:Key="buttonName" >Notes</s:String>
        </Style.Resources>
    </Style>

    <Style TargetType="{x:Type Button}" x:Key="SidebarShelfButton" BasedOn="{StaticResource SidebarButton}">
        <Style.Resources>
            <s:Uri x:Key="path">/Resources/Images/Sidebar/Shelf.png</s:Uri>
            <s:String x:Key="buttonName" >Shelfs</s:String>
        </Style.Resources>
    </Style>

</ResourceDictionary>